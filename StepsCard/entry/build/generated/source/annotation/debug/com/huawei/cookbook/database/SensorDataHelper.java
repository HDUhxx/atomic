// Copyright (c) Huawei Technologies Co., Ltd. 2019-2019. All rights reserved.
package com.huawei.cookbook.database;

import java.util.List;
import ohos.data.orm.EntityHelper;
import ohos.data.orm.OrmPredicates;
import ohos.data.rdb.Statement;
import ohos.data.resultset.ResultSet;

/**
 * Generated by ohos.data.orm.processor for sensorData in com.huawei.cookbook.database.FormDatabase. Do not modify!
 *
 * @author Huawei
 * @since 2022-08-08
 */
public class SensorDataHelper implements EntityHelper<SensorData> {
    private static final SensorDataHelper INSTANCE = new SensorDataHelper();

    private static final String INSERT_STATEMENT = "INSERT INTO `sensorData` (`date`, `stepsValue`, `realValue`) VALUES (?,?,?)";

    private static final String UPDATE_STATEMENT = "UPDATE `sensorData` Set `date` = ?, `stepsValue` = ?, `realValue` = ? WHERE `rowid` = ?";

    private static final String DELETE_STATEMENT = "DELETE FROM `sensorData` WHERE `rowid` = ?";

    private SensorDataHelper() {
    }

    public static SensorDataHelper getInstance() {
        return INSTANCE;
    }

    @Override
    public void bindValue(Statement statement, SensorData object) {
        String date = object.getDate();
        if (date != null) {
            statement.setString(1, date);
        } else {
            statement.setNull(1);
        }
        statement.setLong(2, object.getStepsValue());
        statement.setLong(3, object.getRealValue());
    }

    @Override
    public void bindValue(Statement statement, SensorData object, long id) {
        this.bindValue(statement, object);
        statement.setLong(4, id);
    }

    @Override
    public SensorData createInstance(ResultSet resultSet) {
        SensorData object = new SensorData();
        object.setRowId(resultSet.getLong(0));
        object.setDate(resultSet.getString(1));
        object.setStepsValue(resultSet.getInt(2));
        object.setRealValue(resultSet.getInt(3));
        return object;
    }

    @Override
    public void setPrimaryKeyValue(SensorData object, long value) {
    }

    @Override
    public String getTableName() {
        return "sensorData";
    }

    @Override
    public String getInsertStatement() {
        return INSERT_STATEMENT;
    }

    @Override
    public String getUpdateStatement() {
        return UPDATE_STATEMENT;
    }

    @Override
    public String getDeleteStatement() {
        return DELETE_STATEMENT;
    }

    public OrmPredicates generatePredicatesGetRelated(String foreignKeyName,
            List<SensorData> objects) {
        return null;
    }
}
